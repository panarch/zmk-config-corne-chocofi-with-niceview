/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt { flavor = "tap-preferred"; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q         |  W  |  E  |  R      |  T  |   |  Y       |  U      |  I  |  O  |  P           |
// | &mt CTRL A |  S  |  D  | &lt 3 F |  G  |   |  H       | &lt 3 J |  K  |  L  |  ;           |
// | &mt SHFT Z |  X  |  C  |  V      |  B  |   | &mt B N  |  M      |  ,  |  .  | &mt RSHFT /  |
//                    | GUI | LWR     | SPC |   |  ENT     | RSE     | ALT |
                        bindings = <
   &kp A &kp Q        &kp W  &kp E    &kp R    &kp T       &kp Y       &kp U    &kp I     &kp O   &kp P           &kp A
   &kp A &mt LCTRL A  &kp S  &kp D    &lt 3 F  &kp G       &kp H       &lt 3 J  &kp K     &kp L   &kp SEMI        &kp A
   &kp A &mt LSHFT Z  &kp X  &kp C    &kp V    &kp B       &mt B N     &kp M    &kp COMMA &kp DOT &mt RSHFT FSLH  &kp A
                             &kp LGUI &mo 1    &kp SPACE   &kp RET     &mo 2    &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  1   |  2  |  3     |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BT1  | BT2 | BT3    | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
// | SHFT |  A  | BT_CLR |     |     |   |     |     |     |     |     |
//              |    GUI |     | SPC |   | ENT |     | ALT |
                         bindings = <
   &kp A &kp N1        &kp N2        &kp N3        &kp N4        &kp N5         &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp A
   &kp A &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &kp A
   &kp A &kp LSHFT     &kp A         &bt BT_CLR    &trans        &trans         &trans    &trans    &trans    &trans     &trans  &kp A
                                     &kp LGUI      &trans        &kp SPACE      &kp RET   &trans    &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp A &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR &kp A
   &kp A &trans    &trans  &trans    &trans    &trans      &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH &kp A
   &kp A &trans    &trans  &trans    &trans    &trans      &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE &kp A
                           &kp LGUI  &trans    &kp SPACE   &kp RET    &trans     &kp RALT
                        >;
                };

                fj_layer {
// -----------------------------------------------------------------------------------------
// | TAB      |     |     |     |     |   |     |     |       |     |     |  BKSP   |
// | CAPSLOCK |     |     |     |     |   |     |     |  ESC  |     |     |  '      |
// | LSHFT    |     |     |     |     |   |     |     |       |     |     |  RSHFT  |
//                  | GUI |     | SPC |   | ENT |     |  ALT  |
                        bindings = <
   &kp A &kp TAB       &trans  &trans    &trans   &trans      &trans    &trans    &trans     &trans    &kp BSPC    &kp A
   &kp A &kp CAPSLOCK  &trans  &trans    &trans   &trans      &trans    &trans    &kp ESC    &trans    &kp SQT     &kp A
   &kp A &kp LSHFT     &trans  &trans    &trans   &trans      &trans    &trans    &trans     &trans    &kp RSHFT   &kp A
                               &kp LGUI  &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
               };
        };
};
